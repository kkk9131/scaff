2025-09-11 初期化: Git リポジトリを作成し、AGENTS（英/日）と .gitignore を追加。GitHub リモート接続・main ブランチを push。
2025-09-11 追記: 言語方針/コメント/チェックリスト/二言語ドキュメント/ログ運用を AGENTS に追加。activity.log 運用開始。
2025-09-11 ドキュメント: 開発フロー（英/日）を追加し、README からリンク。
2025-09-11 ガイド: AGENTS に開発フロー順守を追記（英/日）。
2025-09-11 設定: CODEOWNERS を追加し、コードレビュー自動依頼を有効化。
2025-09-11 開発: フェーズ1スケルトン（Next.js+TS+Tailwind、UI骨格/Canvas仮）を追加。README更新。
2025-09-11 チェックリスト: フェーズ1の達成項目（Next.js環境/サイドバー/キャンバス/上部バー）を docs/開発ロードマップ.md でチェック。
2025-09-11 設定: shadcn/ui 用ボイラープレート追加（tailwindcss-animate、utils、Button、components.json）。
2025-09-11 完了: Tailwind + shadcn/ui 導入をチェックし、.gitignore に .next/ を追加。
2025-09-11 開発: Three.js + postprocessing の最小プレースホルダーを追加（3Dビュー切替対応）。
2025-09-11 ドキュメント: 開発フローをブランチ運用版に更新（英/日）。
2025-09-11 実装: フェーズ2 最小実装（内部モデルmm/座標系/スケール）を追加し、初期長方形（8000mm×6000mm）をCanvasに描画。リサイズ対応。
2025-09-11 ドキュメント: docs/2D-内部モデル_座標・単位・スケール.md を追加。ロードマップの「テンプレート呼び出し（長方形）」にチェック。
2025-09-11 実装: テンプレート追加（L字／コの字／T字）。内部モデルで多角形生成（mm）＋Canvas描画に対応。サイドバーからテンプレート切替を追加。
2025-09-11 チェックリスト: ロードマップの「テンプレート呼び出し（L字／コの字／T字）」にチェック。
2025-09-11 ドキュメント: ロードマップの競合マーカーを解消し、テンプレート（L/U/T）完了チェックを確定。
2025-09-12 15:15: フェーズ2開始用ブランチ 'phase-2' を作成
2025-09-12 15:21: 平面図の矩形で辺クリック→mm入力の寸法編集を実装（CanvasArea）。
2025-09-12 15:25: 寸法入力プロンプトを方位（北/東/南/西）表記へ変更。Canvasラベルも東西/南北表記に統一。
2025-09-12 15:33: L/U/T テンプレートの辺クリック→方位に基づく寸法入力を実装（外形寸法＋切欠/開口/バー・柱）。
2025-09-12 15:40: 非矩形の辺名称を『辺n方位』に統一。プロンプトに反映（L/U/T/T）。
2025-09-12 15:45: T字の南向き短辺（辺3/辺7）に編集を割当。入力=短辺東西長→バー幅再計算。
2025-09-12 15:49: ロードマップ更新: フェーズ2『寸法入力』を完了に変更（矩形/L/U/T, 辺番号+方位）。
2025-09-12 main 更新: origin/main を fast-forward で取り込み。
2025-09-12 ブランチ作成: フェーズ2『頂点ドラッグ編集（寸法自動更新）』着手用に 'feat/phase2-vertex-drag' を作成。
2025-09-12 ブランチ公開: 'feat/phase2-vertex-drag' を origin に push（追跡設定）。
2025-09-12 実装開始: キャンバスで頂点ハンドル表示と矩形の頂点ドラッグ→寸法自動更新（中心固定）を追加。transform に screenToModel を追加。
2025-09-12 実装: L/U/T の頂点ドラッグに対応（各頂点に応じて外形寸法・開口/切欠・バー/柱寸法を再計算）。
2025-09-12 修正: テンプレート切替が即時反映されるよう描画の再呼び出しを追加（サイドバーの開閉不要）。
2025-09-12 ロードマップ更新: フェーズ2『頂点ドラッグ編集（寸法自動更新）』を完了に変更。
2025-09-12 ブランチ作成: フェーズ2『スナップ機能（直角・グリッド吸着）』対応で 'feat/phase2-snap-orthogonal-grid' を作成。
2025-09-12 仕様追加: スナップ機能の仕様（日本語/英語）を docs/ に追加（直角±7.5°、グリッド50mm、直角→グリッド適用順）。
2025-09-12 実装: src/core/snap.ts に純粋関数群（snapToGrid/snapToOrtho/applySnaps）を追加。
2025-09-12 統合: Canvas のドラッグ処理にスナップ適用。グリッドの薄い可視化を追加。README（英/日）を更新。
2025-09-12 UI: サイドバーにスナップ設定（グリッドON/OFF・間隔、直角ON/OFF・許容角）を追加。ショートカット（g/o）を実装。
2025-09-12 UI: サイドバー各セクションの開閉アイコンを lucide-react の Chevron に変更（絵文字から置換）。デフォルトは閉。
2025-09-12 ロードマップ更新: フェーズ2『スナップ機能（直角・グリッド吸着）』を完了に変更。
2025-09-12 main 更新: origin/main を fast-forward で取り込み（スナップ機能・UI設定を反映）。

2025-09-12: フェーズ2着手、ブランチ作成、スキャフォールド追加
- 新規ブランチ `feat/phase2-dimensions-always-visible` を作成
- 設計ドキュメント `docs/design/dimensions-always-visible.md` を追加
- コア骨組み `src/core/dimensions/` （モデル/エンジン）を追加
- テスト雛形 `tests/core/dimensions/dimension_engine.spec.ts` を追加
- リポジトリ概要 `README.ja.md` を追加

2025-09-12: デモ追加・JSエンジン用意
- ブラウザ用JS版エンジン `src/core/dimensions/dimension-engine.js` を追加
- ビルド不要のSVGデモ `assets/demo-dimensions/index.html` を追加
- READMEにデモの使い方を追記

2025-09-12: UI統合モジュール追加
- SVGレンダラ `src/ui/svg/dimension-renderer.js` を追加
- UI統合デモ `assets/demo-dimensions/index-ui.html` を追加
- READMEにUI統合デモの説明を追記

2025-09-12: 直開き対応インライン版デモ追加
- `assets/demo-dimensions/index-ui-inline.html` を追加（ESM不要、file直開きでも動作）
- READMEにローカルHTTPサーバ手順とインライン版の案内を追記

2025-09-13 00:25: activity.log の運用ルールを AGENTS に追記
- `AGENTS.md` と `AGENTS.ja.md` に activity.log の統一書式（append-only/JST/箇条書き/秘密情報禁止）を追加
- 以後は追記のみ。既存行の削除・書換・並べ替えを禁止

2025-09-13 00:40: 外側判定の厳密化を実装（CW/CCW自動）
- コア: `computeForPolygon(points)` を追加し、shoelace 面積で CCW/CW を判定
- ルール: CCW→右法線が外側、CW→左法線が外側（画面座標前提）
- UI: `outsideMode`（auto/left/right）を追加し、デモにラジオボタンで切替を追加
- ドキュメント: 設計/README を更新

2025-09-13 00:55: インライン版デモの描画を堅牢化
- CSSが効かない環境でも線が見えるよう、SVG要素に `stroke`/`stroke-width`/`fill` を直接指定

2025-09-13 01:05: ラベル衝突回避を追加
- UI: `src/ui/svg/dimension-renderer.js` に簡易衝突回避を実装（BBox交差検出→外側法線方向へ段階オフセット）
- README/設計ドキュメントを更新

2025-09-13 01:25: CanvasArea に寸法オーバーレイを統合
- `src/components/CanvasArea.tsx` に SVG オーバーレイを追加（絶対配置）
- コア `DimensionEngine` を用いて多角形のCW/CCWから外側を自動判定し、寸法線＋ラベルを描画

2025-09-13 01:35: エディタの寸法表示を mm に変更
- CanvasArea の寸法ラベルを内部モデルの長さ（mm）で表示（整数mm）

2025-09-13 01:50: サイドバーに寸法設定を追加・CanvasArea対応
- Sidebar に寸法パネル（表示ON/OFF、外側モード、自動/左/右、オフセット、小数桁）を追加
- Page から CanvasArea へ設定をpropで連携
- CanvasArea 側で outsideMode/offset/decimals と表示ON/OFFを反映

2025-09-13 02:00: 寸法設定の反映不具合を修正
- CanvasArea で寸法設定を useRef に保持し、変更時に再描画
- これにより表示ON/OFF・外側モード・オフセット・小数桁が即時反映

2025-09-13 02:15: オフセットのmm指定とズーム連動、ラベル衝突回避をエディタに導入
- Sidebar: オフセット単位（px/mm）とラベル回避ON/OFFを追加
- CanvasArea: px/mm変換（pxPerMm連動）を適用、ラベル衝突回避ロジックを移植

2025-09-13 02:25: ロードマップ更新（寸法線の項目を完了）
- docs/開発ロードマップ.md のフェーズ2「寸法線＋数値の常時表示（各辺外側）」を完了に変更
- 外側判定（自動/手動）、mm表示、小数桁、オフセットpx/mm、衝突回避、リーダー線を記載

2025-09-13: フェーズ2「線スタイル（壁＝ネオンブルー、補助＝ライトグレー）」作業ブランチを作成
- ブランチ feat/phase2-line-styles を作成（ベース: main）
 - 線スタイル実装開始（壁=ネオンブルー、補助=ライトグレー）
 - 共通カラー定義を追加（src/ui/colors.ts）
 - Canvas/SVGの色指定を置換（src/components/CanvasArea.tsx）
 - デモCSSを更新（assets/demo-dimensions/index-ui.html）

2025-09-13: ロードマップ更新とコミット／プッシュ
- docs/開発ロードマップ.md のフェーズ2「線スタイル」を完了に変更
- 実装分を feat コミット、ロードマップを docs コミットで分割
- ブランチをリモートへプッシュ（feat/phase2-line-styles）

2025-09-13: mainに取り込み（PRマージ反映）
- リモートmainを取得しローカルmainへfast-forward
- ローカルはmainに切替済み（feat/phase2-line-styles は保持）

2025-09-13: 軒の出（Eaves Overhang）タスクを追加・ブランチ作成
- 設計メモを追加（docs/design/eaves-overhang.md）
- ロードマップにタスクを追記（docs/開発ロードマップ.md）
- 作業ブランチ作成（feat/phase2-eaves-overhang）

2025-09-13: 軒の出の保存時期をフェーズ5へ変更
- 設計メモを更新（本フェーズは保存対象外に明記）
- ロードマップを更新（フェーズ5に保存・読込の対象として追加）

2025-09-13 19:20: フェーズ2「軒の出」作図機能を実装・統合
- 外側オフセットユーティリティを追加（src/core/eaves/offset.ts、マイター/ベベル対応）
- キャンバスに軒の出（点線・壁色）を描画、ラベルを表示（mm）
- サイドバーに「軒の出」セクション（ON/OFF・出幅mm）を追加
- ページ状態とCanvasを接続、クリックで一括出幅更新の簡易編集対応
- ロードマップを更新（該当チェックを完了に変更）

2025-09-13 19:28: 軒の出が内側になる問題を修正
- CW時の外側法線の選択を誤って右法線にしていたのを左法線に修正
- `src/core/eaves/offset.ts` の outwardNormal 判定を更新

2025-09-13 19:35: 凹角の結合をマイターに変更
- 凸角と同様に凹角もオフセット直線の交点で結ぶ仕様へ変更
- 凹角のマイター長は既定無制限（concaveMiterLimit=∞）、平行や過剰時のみベベル
- 設計メモを更新（docs/design/eaves-overhang.md）

2025-09-13 19:42: 寸法線を軒ラインより外に配置
- 寸法線オフセットに「軒の出(mm)のpx換算＋余白(12px)」を加算
- `src/components/CanvasArea.tsx` の寸法線オフセット計算を更新

2025-09-13 19:55: 軒の出の辺ごと個別設定を実装
- データモデルに perEdge を追加しクリックで編集可能に（Canvas→Pageに反映）
- 変動距離オフセット `offsetPolygonOuterVariable` を追加（src/core/eaves/offset.ts）
- ラベルを辺ごとの値表示に変更、寸法線は最大出幅に追従

2025-09-13 20:05: ビルドエラー修正（動的importのawait除去）
- CanvasArea の描画関数で `await import` を使用していたためNext.jsビルドが失敗
- 静的 import（`offsetPolygonOuterVariable`）に置換して解消

2025-09-13 20:15: 軒ラインでの編集と描画条件の改善
- ヒットテストを拡張し、軒の出ラインを優先してクリック編集できるように変更
- per-edge=0 の辺は軒ライン/ラベルを描画しない（デフォルト0で個別のみ表示が可能）

2025-09-13 20:20: 軒の出編集ダイアログのメッセージ改善
- 「この辺」→「辺N」の表記に変更（ユーザーの意図と一致）

2025-09-13 20:28: 軒の出編集挙動（案A）を実装
- 0=この辺は無し（個別0を保存）、空欄=個別設定解除（デフォルトに戻す）
- 非数値入力は無視（変更なし）

2025-09-13 20:40: 0mm隣接時の接続をL字に修正
- 片側の隣接辺が0mmかつ凸の頂点で、軒ライン端から水平/垂直に壁頂点へL字接続
- 既存の端点置換（壁頂点直結）は撤回し、オフセット線分＋L字補助線で表現

2025-09-13 20:50: フェーズ2にズーム機能と階層管理を追加（ロードマップ更新）
- ズーム: ホイール/ピンチ/キーボード、カーソル中心、px/mm連動、UI(±/100%)
- 階層管理: 壁/寸法/軒の出/グリッド/ガイド、表示ON/OFF・ロック、サイドバーに追加予定

2025-09-13 21:00: 設計ドキュメントを追加（EN/JA）
- ズーム: docs/design/zoom.md, docs/design/zoom.ja.md
- レイヤー: docs/design/layers.md, docs/design/layers.ja.md

2025-09-13 21:05: フロア管理の要件定義を追加
- 日本語: docs/design/floors.ja.md
- 英語: docs/design/floors.md
2025-09-13 21:15: mainを最新へfast-forward
- リモートmainの変更を取り込み（git fetch → checkout main → pull --ff-only）
2025-09-14: ログ日付形式の運用変更
 - 今後は日付のみ（YYYY-MM-DD）で記録（時刻は省略）

2025-09-14: フェーズ2「ズーム機能（キャンバス拡大縮小）」の作業ブランチを作成
- ブランチを作成: feat/phase2-zoom-canvas
- リモート未プッシュ（必要なら push 要）

2025-09-15: ロードマップのズーム機能を完了に更新
- docs/開発ロードマップ.md の該当チェックを [x] に変更
- 関連ブランチ: feat/phase2-zoom-canvas

2025-09-15: ズーム機能を main に統合
- main を最新化（fetch→pull --ff-only）
- feat/phase2-zoom-canvas を main へマージし push

2025-09-15: フェーズ2「階層管理（レイヤー）」の作業ブランチを作成
- ブランチを作成: feat/phase2-layers
2025-09-15: MVP最終チェック用ブランチを作成
- ブランチを作成: release/mvp-final-check
2025-09-15: MVP最終チェックブランチをリモートへ公開
- git push -u origin release/mvp-final-check（PR作成準備）
2025-09-15: プレビュー機能を追加（保存ボタン横）
- TopBarに「プレビュー」を追加（src/components/TopBar.tsx）
- 全階層合成表示のオーバーレイを実装（src/components/PreviewOverlay.tsx）
- 壁=実線、軒の出=破線、階層色で描画。重なりは上階を優先
- 寸法線は図面の外側に統一し各面に1本線の分割表現で表示（フロア名付き）
2025-09-15: プレビューの視認性改善（ズーム・色）
- オーバーレイを拡大（96vw/92vh）し、ズーム操作（+-/ホイール/フィット）を追加
- 寸法線・ラベル色を各階の壁色に合わせて表示
2025-09-15: 寸法線の配置を軒の出より外へ
- 各面の基準線を、最大の軒の出量(mm)に応じて外側へオフセット（+余白）
2025-09-15: 東西向きの寸法線が内側に入る不具合を修正
- 上下端のY座標算出を修正（モデルY→画面Yの反転に対応）
2025-09-15: 壁がない区間の寸法線を非表示に変更
- 各面の寸法基準線を全体線から区間線（壁がある部分のみ）へ変更
- 目盛の重複を抑制（端点が連続する場合に統合）
2025-09-15: 寸法値の重なり回避を実装（プレビュー）
- 各面・各行でラベルの重なりを検出し、外側へ段階的にオフセットして配置
2025-09-15: 南北方向の寸法値の重なりを縦ずらしで解消
- 左右面のラベルは縦方向に段階的に位置調整（0,±1,±2…×12px）
2025-09-15: 南北方向の寸法値が解消しないケースへ回転フォールバック
- 縦ずらしで解決しない場合は90°回転＋外側へオフセットして重なり回避
2025-09-15: 東西（左右面）のラベル重なりを全行横断で解消
- 左右面は行ごとのXオフセットだけでなく、行インデックスでY基準を微調整
- 面単位で配置済みBBoxを共有し、行を跨いだ衝突も回避
2025-09-15: プレビューに軒の出専用行を追加
- 壁寸法の1行外に面別の基準線を追加し、1本線の分割表現で軒の出量を表示
- ラベル色は階色、線は半透明で控えめに描画
2025-09-15: プレビューの線混雑緩和のため軒の出専用行を撤去
- 追加した軒の出専用の寸法行（面別1本線表現）をいったん無効化
2025-09-15: 軒の出を丸囲みで壁と軒の間に表示
- 各辺の中点付近に小さな円＋数値（単位省略）を配置
- 円は半透明黒の塗り＋階色のストローク、文字は階色で控えめ
- 狭い場合は非表示にして既存表示を邪魔しない
2025-09-15: プレビューに「軒の出」表示/非表示トグルを追加
- ヘッダーにボタンを追加（軒の出: 表示中/非表示）
- 破線と丸囲みラベルの両方がトグルに連動
- リモート未プッシュ（必要なら push 要）

2025-09-15: レイヤー機能の最小実装（表示/ロック/描画順）
- 状態: Pageに layers を追加（grid/guides/walls/eaves/dims）
- UI: Sidebarに「レイヤー」セクション（表示/ロックのトグル）を追加
- Canvas: レイヤー可視で描画を分岐、ロックでヒットテスト/ドラッグを無効化

2025-09-15: 階層（フロア）UIの初期実装を追加
- Sidebarのレイヤー内に「階層」セクションを追加（選択/追加/削除/複製/高さmm）
- Pageに floors 状態とハンドラを追加（既定 1F, 2800mm）

2025-09-15: フロアの既定を「1F」と「屋根」の2つに変更
- 初期 floors に {id:'roof', name:'屋根'} を追加

2025-09-15: 複製ボタンで次の階を自動作成し壁/軒の出を複製
- Canvasからのスナップショットを受け取り、Pageで floors へ保存
- 複製時はアクティブ階を最新状態に反映後、次番号のF階を追加

2025-09-15: Canvasに階層を反映（アクティブ編集/他階半透明表示/ヒットテスト無効）
- CanvasArea: floors/activeFloorId を受け取り、非アクティブ階の壁・軒を半透明描画
- アクティブ階のみ寸法表示と編集対象に限定

2025-09-15: 非アクティブ階の視認性を改善（色分け＋半透明）
- フロアごとに配色パレットを割当て、半透明(0.55)で描画
- 軒の出も同色の点線で表示
2025-09-15: フェーズ2 ズーム機能の初期実装
- ブランチをリモート公開（feat/phase2-zoom-canvas）
- Canvasのホイール/キーボードズームを実装（カーソル中心、Ctrl+ホイール対応）
- パン（px）を内部管理し、ヒットテスト・ドラッグ・寸法描画に反映
- 右上にズームUI（- / 100% / +）を追加、ズーム倍率を表示
2025-09-15: ロードマップにE2E(Playwright MCP)を追記
- フェーズ2「ズーム機能」にE2E方針/項目を追加（Playwright＋MCP）
- test-id付与・playwright.config.ts・npmスクリプトの準備タスクを明記
2025-09-15: ロードマップにE2E（Playwright MCP）計画を追記
- フェーズ2「ズーム機能」にE2E項目を追加（Playwright＋MCP）
- セットアップ、test-id、テスト項目、実行スクリプト、MCP連携を明記
- 次アクション: test-id付与とサンプルE2E（zoom.spec.ts）作成
2025-09-15: 階層管理（floors.md）を精読し確認事項を整理
- docs/design/floors.md と floors.ja.md の要件を確認
- レイヤー設計との整合やUI挙動の不明点を質問として作成
2025-09-15: floors設計に3D準備を追記（押し出し＋軒の出）
- wallsを外周+穴（外周CCW/穴CW）で明確化
- 押し出し規則（elevationMm→elevationMm+heightMm）を定義
- 3Dでの軒の出薄板生成（既定厚50mm）を記載
2025-09-15: フェーズ2 階層管理の最小実装を開始
- 型追加（src/core/floors.ts）と自動色（src/ui/palette.ts）
- Sidebarに「階層」セクションを追加（追加/複製/削除、Z/階高、可視/ロック、選択/改名）
- Pageにfloors状態とアクティブ階、CanvasAreaに複数階描画とアクティブ階編集の受け口を追加
2025-09-15: バグ修正と複製動線の改善
- 軒の出描画で配列長不一致により例外発生→辺ごとのオフセット計算に改修
- 複製は「直上階」を自動生成（Zは下階Z+階高、色は次色、アクティブ切替）
- 階高入力UIを改善（単位表記・step/tooltip追加）
2025-09-15: 非アクティブ階の視認性を改善
- 下階を半透明塗り＋破線アウトラインで描画し、アクティブ階を前面実線に変更
2025-09-15: 非アクティブ階の半透明を一時無効化
- 要望に合わせ塗りと透過を廃止し、不透明の破線のみで表示
2025-09-15: アクティブ階切替ボタンを追加
- Sidebarの階層セクションに「▲/▼」ボタンで前後の階へ切替
2025-09-15: 非アクティブ階の描画仕様を再調整
- 線種は実線で共通、非アクティブは色を薄く（alpha≈0.55）して表示
- フロアの「👁」で可視/非表示切替（Canvas側でも尊重）
- 追加時の形状をディープコピー化（同時編集防止）。アクティブ化を自動実行
- ロック状態をCanvasで尊重（ハンドル非表示・編集無効、LOCKED表示）。ロックボタンを🔒/🔓で明示
2025-09-15: 同時編集見え問題の対策強化
- Drag中の矩形編集で即時に階層shapeへ反映（emit）するよう修正
2025-09-15: 非アクティブ階がアクティブ形状を参照する問題を修正
- 描画ループで非アクティブ階は常に自身の shape を使用（フォールバック排除）
2025-09-15: 形状更新の対象階を明示
- emit時にアクティブIDを添えて親に通知し、対象階のみ更新するよう修正
2025-09-15: 非アクティブ階が見えない件の対処
- 非アクティブ階は線は薄色実線のまま、内側をごく薄く塗って重なり時でも視認可能に
2025-09-15: 非アクティブ階の軒の出ラインを点線表示
- 各階のeaves設定を用い、非アクティブでも点線で表示（編集不可）
2025-09-15 19:45: 階層管理の仕上げとコミット準備
- 非アクティブ描画を薄色実線＋極薄塗りに調整（視認性）
- 追加/複製でshapeをディープコピーし独立編集を保証
- アクティブ切替（クリック/▲▼/PgUp・PgDn）、ロック尊重（編集無効/表示）
- 非表示(👁)をCanvasでも尊重、軒の出描画エラー修正
2025-09-15: 各階の軒の出を個別編集可能に
- 階リストに軒の出ON/OFFと一括出幅(mm)の入力を追加（キャンバスの辺クリックはアクティブ階で引き続き可能）
2025-09-15: 仕様に合わせUIと複製方針を修正
- 階リストの軒の出コントロールを撤去（編集はアクティブ階キャンバスのみ）
- 複製時は eaves を複製しない（デフォルト無効）
2025-09-15: 軒の出編集の対象階をID指定で更新
- Canvas→Page の onUpdateEaves を (id, patch) に変更し、他階への反映を防止
2025-09-15 20:10: 軒の出編集の独立性を確保して最終調整
- Canvas→PageのonUpdateEavesを(id, patch)化し、対象階のみ更新
- 非アクティブの軒の出を点線、壁は薄色+極薄塗りで視認性確保
- 階リストの軒UIを撤去、複製時のeavesはデフォルトOFF
2025-09-15 20:20: 開発ロードマップを更新（階層管理の進捗反映）
- フェーズ2に「階層（フロア）管理」完了項目を追記、3D準備/表示仕様/複製方針を明記
- フェーズ5にフロア保存（floorsスキーマ）を追加
2025-09-15 20:25: Roadmap(英語)を追加しREADMEリンク更新
- docs/Roadmap.md を追加（開発ロードマップの英訳/同期用）
- READMEに JA/EN 両方のロードマップへのリンクを追記
2025-09-15: フェーズ5「データ管理（MVP必須）」ブランチ作成
- 作業用ブランチを作成（phase5/data-management-mvp）
- フェーズ5着手準備としてロードマップを再確認
2025-09-15: フェーズ5（データ管理）実装
- JSON保存/読み込みを実装（src/io/persist.ts、TopBar配線、Page読み込みUI）
- floors/eaves/color/shapeを保存し、walls.outerはCCWへ正規化
- ローカルストレージ自動保存/復元を追加
- docs/開発ロードマップ.mdのフェーズ5を完了に更新、READMEに使い方を追記
2025-09-15: ビルドエラー修正
- src/app/page.tsx の重複インポート（createFloor）を解消
2025-09-15: サイドバーに「エディタ初期化」ボタンを追加
- Sidebarにデータセクションを追加し初期化操作を実装
- Pageから初期化処理を配線（LS消去→初期1F生成→アクティブ設定）
2025-09-15: 初期化の配置をTopBarメニューへ移動
- Sidebarのデータセクションを撤去し、TopBarに…メニューを追加
- メニュー内に「エディタを初期化」を配置
2025-09-15: 初期化の完全対応
- 初期化時にSidebar開閉/ビュー/テンプレ/寸法/スナップも既定値へ戻す
- CanvasAreaを再マウントしてズーム/パン等の内部状態もリセット
2025-09-15 15:16: ロードマップとログを更新（初期化明記）
- フェーズ5に「エディタ初期化（TopBarの…メニュー）」を追記（JA/EN）
- 完全初期化対応の記録を追加
2025-09-15 15:23: mainを最新化
- origin/main の最新コミットを取り込み（fast-forward）
2025-09-15 23:02: リファクタ開始（命名統一と軽微な整理）
- 寸法エンジンTSをケバブケースへリネーム（dimension_engine.ts→dimension-engine.ts）
- 参照更新（CanvasArea/PreviewOverlay/テスト）
- floors.ts の型only importの誤りを修正
- 未使用インポートの整理（CanvasArea）

2025-09-15 23:47: 幾何ユーティリティを追加し外側法線計算を共通化
- 共有モジュール追加（src/core/geometry/orientation.ts）
- CanvasArea/PreviewOverlayで外側法線の自前実装を置換（挙動は不変）
2025-09-15 23:59: 直線交点ユーティリティを追加し重複排除
- 共通関数 intersectLines を追加（src/core/geometry/lines.ts）
- CanvasArea/PreviewOverlay のローカル実装を置換（挙動は不変）
- design ドキュメントのファイル名表記を修正（dimension-engine.ts）
2025-09-16 00:05: 軒の出処理の共通化（ロジック移設のみ）
- 共通ヘルパ追加（src/core/eaves/helpers.ts）
- CanvasArea/PreviewOverlay からオフセット線・交点調整ロジックを移設（見た目は不変）
2025-09-16 00:12: 面積計算の共通化（shoelace重複の削減）
- PreviewOverlay で signedArea2D を使用（モデル座標）
2025-09-16 00:17: 面積計算の共通化（2箇所目）
- PreviewOverlay 側面分類の面積計算を signedArea2D に置換
2025-09-16 00:18: 未使用インポートの整理
- CanvasArea から intersectLines の直接インポートを削除（共通ヘルパ経由で使用）
2025-09-16 00:26: 寸法エンジンの面積計算を共通化
- dimension-engine.ts で signedArea2D を利用しローカル関数を削除（挙動不変）
2025-09-16 00:31: インポート修正
- CanvasArea の軒ヒットテストで使用する offsetPolygonOuterVariable を再インポート
2025-09-16 00:43: Canvasの描画重複を小関数化
- 軒の出の点線描画を drawEavesDashed() に抽出（挙動不変・肘ライン対応）
2025-09-16 14:18: 形状永続化周りのリファクタリングを実施
- floors.tsでcloneShape/createDefaultShapeを追加しJSON経由の複製を排除
- persist.tsにpersistFloorToStateと矩形推定ヘルパーを集約
- Pageコンポーネントで新ヘルパーを利用するよう整理（挙動不変）
- 軒ラベル描画で未定義変数を参照していたため、辺数と面積を算出するよう修正
2025-09-16 15:27: テンプレート形状をカスタム多角形へ変換できるように拡張
- FloorShapeにpoly種別を追加し保存フォーマットを対応
- CanvasAreaで頂点ドラッグ時に自動的に多角形へ変換し自由編集を許可
- Sidebarにカスタム表示を追加しESLint検証を通過確認
- カスタム多角形でも辺長入力で隣接頂点を移動できるよう寸法編集を実装
- フロア複製時は元の色を維持するよう修正（同階バリエーションで統一色を保持）
- 階層色を名前ベースで強制し、Canvas/Previewの描画でも統一カラーを使用
- クリック押下中のスクロールで平面をパンできるようホイール処理を拡張
- トラックパッドでもパンできるようスクロール時の汎用処理を拡張（クリック押下中に限り）
- onWheel内の重複定義を整理

2025-09-16: UI刷新（2026年トレンド対応のモダンデザイン実装）
- グレー基調の建築プロ仕様カラーパレット導入（surface/border/text階層）
- Tailwind設定をモダンデザインシステムに更新（アニメーション/フォント/影）
- TopBar: ブランドロゴ＋高級感のあるガラス効果＋アイコン付きボタン
- Sidebar: 階層構造＋アイコン統一＋状態別カラー＋プロ仕様フォーム
- CanvasArea: 洗練されたズームコントロール＋モダンパネルデザイン
- PreviewOverlay: フルモーダル＋ヘッダー情報表示＋直感的コントロール
- グローバルCSS: CSS変数統合＋スクロールバー＋フォーカス状態統一
- 既存機能の完全後方互換性を維持しつつ視覚的品質を大幅向上

2025-09-16 22:28: フェーズ3立面図自動生成着手用ブランチを作成
- branch feature/phase3-elevation を作成

2025-09-16 22:48: フェーズ3立面図ビュー初版を実装
- 平面＋高さデータから東西南北立面を自動生成するヘルパー追加（src/core/elevation.ts）
- 立面ビューUIを実装しビュー切替と連動（src/components/ElevationView.tsx, src/app/page.tsx）
- ロードマップ（英/日）を更新し立面自動生成完了を記録
2025-09-16 23:15: 立面図の線画化と色統一を調整
- ElevationView で直方体輪郭のみを描画し、階カラーを平面と揃えて表示
2025-09-16 23:29: 立面線の太さを平面図と揃える調整
- ElevationView の線幅と破線ピッチを平面図と同等の尺度に修正
2025-09-16 23:45: 方角別の左右反転を修正
- 南・西立面の描画座標を反転し、実際の見え方と一致するよう調整
2025-09-16 23:56: 北立面の左右向きを補正
- 北立面も左右反転対象に含め、南北の表示向きを実際の見え方に揃えた
2025-09-17 00:21: 立面ビューの縮尺を全方位で統一
- 共有バウンディングを算出し、4方向の立面を共通スケールで描画
2025-09-17 00:48: 立面ビューの背景線とスケールを調整
- 背景矩形の枠線を除去し、全方向の水平軸を共通レンジで描画
2025-09-17: フェーズ3 屋根生成ロジック要件ヒアリング（仕様確定、実装なし）
- 対応形状: フラット/切妻/寄棟/片流れ、階ごと複数屋根と下屋
- 線画: 階の色で点線、既存平面/立面と統一、谷線表示ON（細線）
- eaves反映/上階の陰除外＝既定ON、重なりはトグルで許容
- 切妻: 全辺切妻=棟なし扱い、寄棟: byApex、片流れ: ラベルに最高点H併記
- データモデル/UIフロー/バリデーションの合意（実装は未着手）
- 設計メモを追加（docs/design/roofing.ja.md、docs/design/roofing.md）
2025-09-17: 屋根設計メモに実装順/テスト項目を追記（実装なし）
- docs/design/roofing.ja.md に実装順（フラット→切妻→寄棟→片流れ）とチェックリストを追加
- テスト項目（幾何/共通・タイプ別・多層/下屋）をチェックボックスで洗い出し
2025-09-17: 屋根機能スキャフォールド開始（フラット外形・保存スキーマ）
- 屋根型/データ定義を追加（src/core/roofing/types.ts, index.ts）
- 外形生成の初期実装（eaves反映：src/core/roofing/compute.ts）
- 保存スキーマに roofUnits を追加（src/io/persist.ts / floors.ts）
- チェックリスト更新：オフセット（初期）/保存スキーマ/フラット外形 を完了に変更
2025-09-17: フラット屋根のUI統合（最小）
- サイドバーにフラット屋根の有効化/立上り高さ入力を追加（src/components/Sidebar.tsx）
- 平面キャンバスに屋根外形（階色の点線）とラベル表示を実装（src/components/CanvasArea.tsx）
- pageに屋根状態のブリッジを実装（追加/更新）（src/app/page.tsx）
2025-09-17: 平面の屋根外形=軒ラインで統一（重複描画を廃止）
- Canvasの屋根用輪郭描画を削除し、既存の軒ラインを屋根外形として流用（src/components/CanvasArea.tsx）
- 設計メモに方針明記（docs/design/roofing.ja.md）
2025-09-17: 立面にフラット屋根の反映（最小）
- 高さ上限にパラペット上端を反映（src/core/elevation.ts）
- 立面で各階のパラペット水平線（階色＋点線）を描画（src/components/ElevationView.tsx）
- 左側に寸法線を追加（壁高/屋根頂点高）— 既存スタイル準拠
2025-09-17: 立面のパラペット線を壁頂と接続
- パラペット上端の水平線を、両端で壁頂（軒高）と点線の縦線で結ぶ（src/components/ElevationView.tsx）
2025-09-17: サイドバーの屋根設定を統合
- 屋根セクションで形状（フラット/切妻/寄棟/片流れ）を選択可能に統合（src/components/Sidebar.tsx）
- ページ側の橋渡しを統合（roofUnits の outer を主屋根としてON/OFF/型・パラメータ更新）（src/app/page.tsx）
2025-09-17: 立面の軒先と軒天を結ぶコネクタ追加
- eaves外形の各スパン端と壁スパン端で、パラペット水平線と壁頂を点線で接続（重複防止あり）（src/components/ElevationView.tsx）
2025-09-17: コネクタの描画仕様を修正（軒先端基準）
- コネクタは「軒先端（eaves投影スパン端）からフラット高さ分下へ」下ろして軒天へ接続（水平延長ではなく垂直降ろし）（src/components/ElevationView.tsx）
2025-09-17: 軒先端→軒天の水平ブリッジを追加
- 垂直降ろし後、最寄りの壁スパン端点へ短い水平線で接続し確実に結合（src/components/ElevationView.tsx）
2025-09-17: 立面の上階陰除外（1Dスパン差分）
- eaves外形の投影スパンを上階ユニオンで差し引き、下階パラペット線を自動分割（src/core/elevation.ts, src/components/ElevationView.tsx）
2025-09-17: 下屋の自動抽出（平面・初期）
- 矩形外形の階で、上階屋根（eaves込み）BBoxユニオンを差し引き露出帯をfootprint=polygonとして生成（src/core/roofing/lowerRoofs.ts）
- サイドバーに「下屋を自動抽出」ボタンを追加（src/components/Sidebar.tsx）
- 平面キャンバスに下屋の軒ライン表示とラベルを追加（src/components/CanvasArea.tsx）
2025-09-17: 要望により「下屋の自動抽出」を撤回
- サイドバーのボタンと連動処理を削除（src/components/Sidebar.tsx, src/app/page.tsx）
- 自動抽出ロジックを削除（src/core/roofing/lowerRoofs.ts）
- 設計メモを非採用方針に更新（docs/design/roofing.ja.md）
2025-09-17: 立面の陰除外トグルを追加（屋根ごと）
- サイドバーに「立面で上階の陰を除外」スイッチを追加し、ターゲット階ごとにON/OFF可能に（src/components/Sidebar.tsx, src/app/page.tsx, src/components/ElevationView.tsx, src/core/elevation.ts）
2025-09-17: 立面に折れ（稜線）を実線で追加
- 各水平スパンの両端に縦の実線を描画して、建物の折れを視認可能に（src/components/ElevationView.tsx）
2025-09-17: 折れ線生成ロジックを改善
- 各階外形の内側頂点（方向軸の中間値）で縦実線を描画。外周端は除外し、反転/オフセットを考慮（src/components/ElevationView.tsx）
2025-09-17: ログ最終更新とコミット準備
- 立面の折れ線（稜線）実線表示を安定化、反転/オフセット対応
- 屋根UI統合（形状選択＋フラット/切妻/寄棟/片流れの項目）
- 立面の陰除外トグル（屋根ごと）とパラペット接続の見え方を改善
- 平面は「屋根外形＝軒ライン」ポリシーで統一、重複線を排除
2025-09-20: 寄棟の立面表現を改善（phase3）
- 立面で寄棟の棟方向に応じた描画（水平棟＋左右勾配／直交側は三角）を実装（src/components/ElevationView.tsx）
- 寄棟の棟方向UIを追加（未指定時は長辺自動）（src/components/Sidebar.tsx）
- 立面の高さ上限に切妻/寄棟/片流れの頂点高を反映（src/core/elevation.ts）
- 寄棟の棟方向プロパティをページ側で橋渡し（src/app/page.tsx）
2025-09-20: 寄棟の立面仕様を「全方向三角形」に統一
- ElevationViewで寄棟は常に中央頂点の三角形として描画（src/components/ElevationView.tsx）
2025-09-20: 立面の屋根シルエットに軒の出を反映
- 非フラット屋根（切妻/寄棟/片流れ）の立面描画で、壁スパンではなくeaves外周の投影スパンを使用（上階の陰は設定に応じて差し引き）（src/components/ElevationView.tsx）
2025-09-20: 直前の「上階壁でのクリップ」を取り消し
- 影の処理を従来どおり上階屋根（eavesユニオン）ベースに戻し、寄棟の描画もスパン中央頂点の三角形に復帰（src/components/ElevationView.tsx）
2025-09-20: 非フラット屋根の重なりを「直上階の壁」で非表示
- 立面の非フラット屋根は基本描画するが、直上階（例: 1F→2F）の壁スパンと重なる区間のみカット。複数階上は対象外（src/components/ElevationView.tsx）
2025-09-20: 分割描画時の寄棟/切妻の多重三角形を解消
- eavesスパンを壁で分割しても、頂点位置を“元スパン中央”で固定し、区間ごとにプロファイルを切り出して描画。局所三角形が左右に発生しないように修正（src/components/ElevationView.tsx）
2025-09-20: 寄棟の勾配入力を追加（0.5寸刻み、最大15寸）
- サイドバー寄棟設定に「勾配（寸）」入力を追加（step=0.5, 0..15）（src/components/Sidebar.tsx）
- hipはpitchSunを優先して頂点高さを計算（未設定時はapexHeightMm）（src/components/ElevationView.tsx, src/core/elevation.ts, src/app/page.tsx）
2025-09-20: コネクタを直上階の壁内では描画しないよう抑制
- eaves端が直上階の壁スパンの内側にある場合、軒先→壁頂点のコネクタ線は描画しない（src/components/ElevationView.tsx）
2025-09-20: サイドバーの並び替えとビューの簡易トグル化
- 並び: ビュー → テンプレート → 階層 → 屋根 → 軒の出 → 寸法線 → スナップ（src/components/Sidebar.tsx）
- ビューはクリックで 平面→立面→3D と順送り切替。旧ビュー/テンプレ/スナップの位置は再配置（src/components/Sidebar.tsx）
2025-09-20: 屋根と軒の出の統合セクション
- 屋根セクション内に「軒の出（有効/出幅mm）」を統合。単独の軒の出セクションは削除（src/components/Sidebar.tsx）
- 操作フロー: 形状選択 → 軒の出値 → 勾配/最高点 → 方向（切妻/片流れ）
2025-09-20: 切妻・棟側の四角形を軒の出端で描画
- 棟側（棟に正面）の四角形上辺・縦辺はeaves端（軒の出を反映した端点）で描くよう修正（台形化を解消）（src/components/ElevationView.tsx）
2025-09-20: 棟側で軒先端と壁頂点を“水平”に接続
- 四角形下辺（壁上端）の上で、壁端→軒先端への水平点線コネクタを追加（src/components/ElevationView.tsx）

2025-09-20: 3D操作性の改善（回転/パン/ズーム）
- OrbitControlsへ切替（左ドラッグ=回転、右ドラッグ=パン、中/ピンチ/ホイール=ズーム）
- Shift+ホイールでパン（既定はズーム）、panByPixelsで自然な移動量（src/components/Wireframe3D.tsx）

2025-09-20: パラペット下端の接続を自然に
- 軒の出オフセット外周に沿ってパラペット下端リング（wallTop）も点線で連続描画
- 余分な補助コネクタを撤去し、上下リング＋端点の垂直で整った接続に（src/core/wireframe-3d.ts）
2025-09-20: 片流れの立面表現を強化
- 棟側は切妻と同様に四角形（点線）。壁端→軒先端の水平コネクタも追加
- 片流れ面（勾配が見える側）は、三角形（点線）の斜辺を描画し、高い側の壁ラインを上へ延長（実線）（src/components/ElevationView.tsx）
2025-09-20: 片流れ「高い面」で壁ラインを実線で上端まで延長
- 高い面＝矩形の上辺高さまで、左右の壁縦線（実線）も延長（src/components/ElevationView.tsx）
2025-09-20: 最高高さラインを追加／中間階ラインを削除
- 各面の「階高目安ライン（各階天井）」を廃止し、その代わりに当該方向の最高高さで水平点線を描画（src/components/ElevationView.tsx）
2025-09-20: 片流れ・高い面の張出し区間を点線に、下端も点線で接続
- 上辺は壁内=実線、壁外（軒の出）=点線。壁端→軒先端の下端（-wallTop）も点線で水平接続（src/components/ElevationView.tsx）
2025-09-20: 片流れの棟面判定の変更を取り消し
- 高い面の作図は矩形（先の仕様）で正しいため、直交面の判定を元に戻し高い面で四角形を描画（src/components/ElevationView.tsx）
2025-09-20: 片流れに最高点入力を追加
- サイドバーに「最高点(mm)」を追加。monoは勾配（寸）が0のときは apex を採用、>0のときは勾配を優先（src/components/Sidebar.tsx, src/app/page.tsx, src/components/ElevationView.tsx, src/core/elevation.ts）
2025-09-20: 片流れの方向指定を「高い面」に変更
- UIは N/S/E/W の高い面を選択可能にし、内部では反対側を monoDownhill にマッピング（保存形式は変更なし）（src/components/Sidebar.tsx）
2025-09-20: 寄棟の頂点高さデフォルトを改良
- apexHeightMm が未設定/0のとき、ピッチ（既定4寸）× span/2 から頂点高さを代表値として推定して作図（src/components/ElevationView.tsx）
2025-09-20: サイド面（高い/低い）で軒先端と壁頂点を水平点線で接続
- 高い面=実線四角形・低い面=点線四角形の双方で、左右の壁端→軒先端を水平点線で結ぶ（src/components/ElevationView.tsx）
2025-09-20: サイド面（高い面）の上辺内側の水平線を削除
- 高い面は壁端の実線縦ラインのみ上端まで延長し、上辺は軒の出区間のみ点線を描画。壁内の水平線は描かない（src/components/ElevationView.tsx）
2025-09-20: 片流れサイド面（東西）の三角形点線を実装（軒の出含む）
- 勾配が画面横方向に見える立面で、高い側を頂点とする点線三角形を描画。底辺は軒の出端（eaves）を採用（src/components/ElevationView.tsx）
- 頂点→反対側底辺の斜辺、頂点→同側底辺の垂直辺、底辺の3辺を点線化。壁上端の実線は背景色でマスク
- 軒先端と壁端上端を水平点線で補助接続し、張出し幅を視覚化
2025-09-20: 誤変更を修正—サイド面を元に戻し、残り2面へ三角形を適用
- サイド面（高い/低い）の矩形表現を復元（既存仕様）。
- 軸が勾配軸と一致する2面に、高い側を頂点とする点線三角形を実装（軒の出端を底辺）（src/components/ElevationView.tsx）
  - 高い側の壁の縦ラインは上端（頂点高）まで実線で延長、軒先からの下ろし線は描かない
 - 斜辺は実線、底辺は点線に統一
  - 最高点の高さ算出を全立面で統一（勾配×勾配軸方向寸法 or apex）。サイド面での幅依存を修正
2025-09-20: 片流れ屋根の立面で上階重なりを正しくクリップ
- 非フラット屋根描画で上階の屋根影（軒投影ユニオン）を用いたスパン切り出しへ変更（src/components/ElevationView.tsx）
- コネクタの被覆判定も屋根影ベースに統一
- サイドバーの「立面で上階の陰を除外」設定に追従
2025-09-20: 立面の上下階オクルージョン（壁ラインの突き抜け解消）
- 壁アウトライン矩形を下階の前面スパンでクリップし、上階の壁線が下階に突き抜けないよう修正（src/components/ElevationView.tsx）
2025-09-20: 立面の壁オクルージョン実装を一旦巻き戻し
- 広範囲の非意図的なクリップが発生したため、壁矩形の差分描画とdepth拡張を撤回（src/components/ElevationView.tsx, src/core/elevation.ts）
- 屋根影によるクリップ（上階が下階を覆う処理）は維持
2025-09-20: 斜辺の描き分け（壁内=実線／壁外=点線）
- 片流れ/切妻/寄棟の三角プロファイルで斜辺を壁スパンのユニオンで分割描画（src/components/ElevationView.tsx）
- 壁スパンは画面座標でユニオン化し、斜辺セグメントを内外で描き分け
  - 壁境界に±0.5mmトレランスを付与し、混在する極小セグメントの発生を抑制
2025-09-20: 片流れの左右判定を方向非依存に統一
- 高い向き=downhillの反対、画面左の方角（北=東/南=西/東=南/西=北）との一致で apexOnLeft を決定（src/components/ElevationView.tsx）
2025-09-20: 立面表示の緊急安定化（斜辺分割を一旦停止）
- gable/hip/mono の斜辺分割を撤回し、従来の描画に戻して全方向の破綻を解消（src/components/ElevationView.tsx）
2025-09-20: フェーズ4 3D線画（矩形フラット屋根）最小実装
- ブランチ作成（feat/phase4-3d-wireframe-flat-roof）
- 3Dワイヤーフレーム生成ロジック追加（src/core/wireframe-3d.ts）
- Wireframe3Dコンポーネント追加（COLORS.wall 準拠の線色）
- 3DビューをWireframe3Dに差し替え（src/app/page.tsx）
  
2025-09-20: L/U/T形状対応（3D線画の可視差向上）
- フロア別に線分を生成し色分け描画（src/components/Wireframe3D.tsx）
- L/U/T 形状の外周をそのままプリズム化して3D線画表示

2025-09-20: フラット屋根の立上りを点線化
- パラペット立上り（壁上端→パラペット上端）を LineDashedMaterial で描画
- 実線/点線を分離生成（src/core/wireframe-3d.ts）、3D描画更新（src/components/Wireframe3D.tsx）

2025-09-20: 天井ライン=実線・パラペット=点線に統一
- 天井（壁上端の水平リング）を常に実線化、パラペット上端水平リングを点線化
- buildFlatRoofWireStyledFromFloor の線種分離を更新（src/core/wireframe-3d.ts）

2025-09-20: 3Dの軒の出対応（フラット）
- パラペット上端リングと立上りを軒の出オフセット外周に沿って描画
- バウンディング計算を実線+点線の合成に変更（src/components/Wireframe3D.tsx）

2025-09-20: 壁頂点と軒先端を結ぶ点線コネクタ
- 天井高さの壁頂点→軒の出先端（パラペット上端）を斜め点線で結ぶ（src/core/wireframe-3d.ts）

2025-09-20: 立面図同様の結び方に修正
- 斜めコネクタを廃止し、天井高さでの水平点線 + 軒先垂直点線のL字結線へ変更（src/core/wireframe-3d.ts）
2025-09-21 00:47: main最新化と新規ブランチ作成
- mainを最新のorigin/mainへfast-forward
- 作業ブランチを作成（feat/3d-non-flat-roofs）
2025-09-21 00:55: 3Dワイヤーに切り妻対応（初期）
- gable用ワイヤ生成を追加（src/core/wireframe-3d.ts）
- 3D描画は壁=実線、屋根線=点線（棟・軒・補助線）
- Wireframe3Dで屋根タイプに応じて切替（src/components/Wireframe3D.tsx）
2025-09-21 01:10: 切妻の自然表現を改良（斜材・破風）
- 非妻面の軒端点→棟への斜めライン（両端）を追加
- 棟端点→同スライスの軒端点（左右/上下）で破風線を明示
- L/U/T等の凹形状でも複数棟区間に追従（src/core/wireframe-3d.ts）
2025-09-21 01:25: 上階壁への屋根食い込みをクリップ
- 上階の壁ボリューム（XY=外周, Z=ベース→軒高）内にある屋根線（点線）を非表示化
- 近似: 屋根線を分割サンプリングして内部区間を除去（性能・視覚のバランス）
- 対象: フラット/切妻ほか全タイプの屋根線に適用（src/core/wireframe-3d.ts, src/components/Wireframe3D.tsx）
2025-09-21 01:40: 寄棟（hip）3Dワイヤーを追加
- apex（重心）へ全周の軒頂点を結ぶ斜材を点線で描画
- ピッチ指定時は最遠軒距離×(寸/10)で棟高、未指定は apexHeightMm
- 軒リングはeaves外周に沿って生成（src/core/wireframe-3d.ts, src/components/Wireframe3D.tsx）
2025-09-21 01:55: 片流れ（mono）3Dワイヤーを追加
- 勾配方向（N/S/E/W）の射影に基づき境界線のZを連続的に変化させて描画
- ピッチ>0なら run×(寸/10)、未設定は apexHeightMm を高側に加算
- 代表等高線を1本追加して面の傾きを視認化（src/core/wireframe-3d.ts, src/components/Wireframe3D.tsx）
2025-09-21 02:05: 片流れの壁上端を屋根勾配に一致
- 壁上端リングを各頂点ごとにzAtで傾斜化（高側=高く、低側=低く）
- 垂直立上りも各頂点の高さまで伸ばし、外観を自然化（src/core/wireframe-3d.ts）
2025-09-21 02:15: 切妻の壁上端を自然化（妻面三角）
- 壁上端リングを妻面で棟中心線との交点をピークとする2分割に変更
- 非妻面は水平維持、頂点の垂直立上りは従来通り（src/core/wireframe-3d.ts）
2025-09-21 02:25: 切妻の導線を「垂直→屋根に沿う」へ調整
- 非妻面の壁頂点ごとに、まず垂直に屋根面（z=wallTop+勾配*距離）へ上げ、そこから棟へ屋根面沿いに結ぶ
- 直線一発の斜め線を廃し、L→斜の自然な見え方に変更（src/core/wireframe-3d.ts）
2025-09-21 02:30: 切妻導線の変更を撤回（元の斜め線へ）
- 垂直→屋根沿いの導線を取りやめ、端点→棟への単一斜線に戻す
- activity.log は履歴保持のため追記のみ（src/core/wireframe-3d.ts）
2025-09-21 02:40: 実線優先の表示ルールを厳密化
- 立面: 壁（実線）を最後に重ね描きし、屋根（点線）より優先表示（src/components/ElevationView.tsx）
- 3D: 実線と完全一致する点線（重複）を除去する重複排除を追加（src/core/wireframe-3d.ts, src/components/Wireframe3D.tsx）
